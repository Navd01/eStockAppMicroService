package com.naveed.exceptions;

import javax.servlet.http.HttpServletResponse;

import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.ControllerAdvice;
import org.springframework.web.bind.annotation.ExceptionHandler;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.context.request.WebRequest;
import org.springframework.web.servlet.mvc.method.annotation.ResponseEntityExceptionHandler;

import com.netflix.hystrix.exception.HystrixRuntimeException;

import feign.FeignException;

@ControllerAdvice
@RestController
public class CustomResponseEntityExceptionHandler extends ResponseEntityExceptionHandler {
	
	@ExceptionHandler
	public final ResponseEntity<Object> handleStockException(StockException ex, WebRequest request){
		StockExceptionResponse exceptionResponse = new StockExceptionResponse(ex.getMessage());
		return new ResponseEntity(exceptionResponse , HttpStatus.BAD_REQUEST);
	}
	
	

//	    @ExceptionHandler(FeignException.class)
//	    public ResponseEntity<Object> handleFeignStatusException(FeignException e, HttpServletResponse response) {
//	        response.setStatus(e.status());
//	        return response;
//	    }
	
//	@ExceptionHandler(FeignException.class)
//	public ResponseEntity<Object> handleFeignException(FeignException ex, WebRequest request) {
//	    final FeignException.FeignClientException feignClientException = (FeignException.FeignClientException) ex.getCause();
//	    return new ResponseEntity(feignClientException , HttpStatus.BAD_REQUEST);
//	}
	
	@ExceptionHandler(FeignException.class)
	public ResponseEntity<Object> handleFeignException(FeignException ex, WebRequest request) {
	    String x = ex.getMessage();
	    return new ResponseEntity(x , HttpStatus.BAD_REQUEST);
	}


}
